@{
    ViewData["Title"] = "Home Page";
}

@model PokerHandAnalyzer.Models.PokerHandModel

<div class="w-100 d-flex flex-column align-items-center">
    <div class="w-25 d-flex flex-column">
        <h2 class="mb-3">Enter Poker Hands</h2>
        <form asp-action="Index" method="post" class="d-flex flex-column align-items-center ">
            <div class="d-flex flex-row gap-2 mb-3">
                <div class="d-flex flex-column">
                    <label for="heroHand" class="form-label">Hero Hand</label>
                    <input type="text" class="form-control" asp-for="HeroHand">
                    <span class="text-danger" asp-validation-for="HeroHand"></span>
                </div>

                <div class="d-flex flex-column">
                    <label for="villainHand" class="form-label">Villain Hand</label>
                    <input type="text" class="form-control" asp-for="VillainHand">
                    <span class="text-danger" asp-validation-for="VillainHand"></span>
                </div>
            </div>

            <div class="mb-3 w-100">
                <label for="communityCards" class="form-label">Community Cards</label>
                <input type="text" class="form-control" asp-for="CommunityCards">
                <span class="text-danger" asp-validation-for="CommunityCards"></span>
            </div>

            <button type="submit" class="btn btn-primary">Analyze Hand</button>
        </form>
        @if (!string.IsNullOrEmpty(Model.ResultMessage))
        {
            <div class="alert alert-success mt-3">
                @Model.ResultMessage
            </div>
        }

        @if (!ViewData.ModelState.IsValid)
        {
            <div class="alert alert-danger mt-3">

                @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
                {
                    <div>@error.ErrorMessage</div>
                }
            </div>
        }
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
